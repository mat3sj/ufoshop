# Generated by Django 5.2.1 on 2025-05-28 16:21

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Category Name"
                    ),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="News",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Title")),
                ("content", models.TextField(verbose_name="Content")),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="news_images/",
                        verbose_name="Image",
                    ),
                ),
                (
                    "published_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Published At"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
            ],
            options={
                "verbose_name": "News",
                "verbose_name_plural": "News",
                "ordering": ["-published_at"],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        null=True,
                        verbose_name="Phone Number",
                    ),
                ),
                (
                    "is_merchandiser",
                    models.BooleanField(default=False, verbose_name="Is Merchandiser"),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email Address"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Location Name")),
                ("address", models.TextField(default="", verbose_name="Address")),
                (
                    "is_universal",
                    models.BooleanField(
                        default=False,
                        help_text="If checked, this location will be available for all merchandisers",
                        verbose_name="Universal Location",
                    ),
                ),
                (
                    "note",
                    models.TextField(
                        blank=True, null=True, verbose_name="Additional Note"
                    ),
                ),
                (
                    "merchandiser",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Merchandiser",
                    ),
                ),
            ],
            options={
                "verbose_name": "Location",
                "verbose_name_plural": "Locations",
            },
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Item Name")),
                ("price", models.IntegerField(default=0, verbose_name="Price")),
                (
                    "amount",
                    models.IntegerField(blank=True, null=True, verbose_name="Amount"),
                ),
                (
                    "short_description",
                    models.CharField(
                        default="", max_length=255, verbose_name="Short Description"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Full Description"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "is_variant",
                    models.BooleanField(default=False, verbose_name="Is Variant"),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Color"
                    ),
                ),
                (
                    "category",
                    models.ManyToManyField(
                        blank=True, to="ufo_shop.category", verbose_name="Categories"
                    ),
                ),
                (
                    "merchandiser",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Merchandiser",
                    ),
                ),
                (
                    "parent_item",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variants",
                        to="ufo_shop.item",
                        verbose_name="Parent Item",
                    ),
                ),
                (
                    "locations",
                    models.ManyToManyField(
                        blank=True,
                        to="ufo_shop.location",
                        verbose_name="Pickup Locations",
                    ),
                ),
            ],
            options={
                "verbose_name": "Item",
                "verbose_name_plural": "Items",
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (1, "In Cart"),
                            (2, "Ordered"),
                            (3, "Paid"),
                            (4, "Shipped"),
                            (5, "Fulfilled"),
                            (6, "Cancelled"),
                        ],
                        default=1,
                        verbose_name="Status",
                    ),
                ),
                (
                    "shipping_address",
                    models.TextField(
                        blank=True, null=True, verbose_name="Shipping Address"
                    ),
                ),
                (
                    "shipping_city",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="City"
                    ),
                ),
                (
                    "shipping_state",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="State/Province",
                    ),
                ),
                (
                    "shipping_country",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Country"
                    ),
                ),
                (
                    "shipping_zip",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="ZIP/Postal Code",
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Contact Email",
                    ),
                ),
                (
                    "contact_phone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="Contact Phone",
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Payment Method",
                    ),
                ),
                (
                    "payment_id",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Payment ID"
                    ),
                ),
                (
                    "needs_receipt",
                    models.BooleanField(
                        default=False,
                        help_text="If checked, a 7% fee will be added for receipt processing",
                        verbose_name="Needs Receipt",
                    ),
                ),
                (
                    "receipt_fee",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Receipt Fee",
                    ),
                ),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Subtotal",
                    ),
                ),
                (
                    "shipping_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Shipping Cost",
                    ),
                ),
                (
                    "total",
                    models.DecimalField(
                        decimal_places=2, default=0, max_digits=10, verbose_name="Total"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "paid_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="Paid At"),
                ),
                (
                    "shipped_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Shipped At"
                    ),
                ),
                (
                    "fulfilled_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fulfilled At"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Customer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order",
                "verbose_name_plural": "Orders",
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.IntegerField(default=1, verbose_name="Amount")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ufo_shop.item",
                        verbose_name="Item",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ufo_shop.order",
                        verbose_name="Order",
                    ),
                ),
                (
                    "pickup_location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ufo_shop.location",
                        verbose_name="Pickup Location",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order Item",
                "verbose_name_plural": "Order Items",
            },
        ),
        migrations.CreateModel(
            name="Picture",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "picture",
                    models.ImageField(
                        upload_to="item_pictures/originals/",
                        verbose_name="Original Image",
                    ),
                ),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="item_pictures/thumbnails/",
                        verbose_name="Thumbnail (150x150)",
                    ),
                ),
                (
                    "square_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="item_pictures/squares/",
                        verbose_name="Squared Image (e.g., 500x500)",
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pictures",
                        to="ufo_shop.item",
                        verbose_name="Item",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Uploaded by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Picture",
                "verbose_name_plural": "Pictures",
            },
        ),
    ]
